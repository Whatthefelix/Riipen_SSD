@model Riipen_SSD.AdminViewModels.EditContestVM

@{
    ViewBag.Title = "EditContest";
}



@section scripts{
    <script src="~/JavaScript/Create_Edit_forms.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}

<h2>Edit Contest</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "ContestForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ContestID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ContestID, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ContestName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContestName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContestName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <h3>Criteria</h3>
        </div>
        <div class="multi-field-wrapper">
            <div class="multi-fields" id="criteria-list">
                @foreach (var item in Model.Criteria)
                {
                    <div class="multi-field criteria-list-item">
                        <input type="text" name="criteria[0].name" placeholder="New Criteria" value="@item.Name" />
                        <input type="text" name="criteria[0].description" placeholder="Criteria Description" value="@item.Description" />
                        <button type="button" class="remove-field btn btn-warning"> Remove </button>
                    </div>
                }
            </div>
            <button type="button" class="add-criteria btn btn-success"> Add Criteria</button>
        </div>

        <div class="form-group">
            <h3>Judges</h3>

        </div>
        <div class="multi-field-wrapper">
            <div class="multi-fields">
                @foreach (var item in Model.Judges)
                {
                    <div class="multi-field judge-list-item">
                        <input type="text" name="judges[0].firstname" placeholder="Judge First Name" value="@item.FirstName" />
                        <input type="text" name="judges[0].lastname" placeholder="Judge Last Name" value="@item.LastName" />
                        <input type="text" name="judges[0].email" placeholder="Judge Email" value="@item.Email" />
                        <button type="button" class="judge-remove-field btn btn-warning">Remove</button>
                    </div>
                }
            </div>
            <button type="button" class="add-judge btn btn-success"> Add Judge</button>
        </div>


        <table class="participantTable">
            <caption>Participants</caption>
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Participants.FirstOrDefault().TeamName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Participants.FirstOrDefault().FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Participants.FirstOrDefault().LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Participants.FirstOrDefault().Email)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Participants)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(x => item.TeamName)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.LastName)
                        </td>
                        <td prewrap>
                            @Html.DisplayFor(x => item.Email)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <label>
            Add teams and judges
                <input type="file" accept="csv" name="participants" data-val="true" data-val-required="File is required" />

</label>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index",null, new {@class="btn btn-info"})
</div>

