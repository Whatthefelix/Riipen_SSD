@model Riipen_SSD.AdminViewModels.EditContestVM

@{
    ViewBag.Title = "EditContest";
}

@
{
    
   
<style>
    #excelPreview {
        display: none;
    }
</style>
<script>
        i = 0;
        $(function () {
            $('.multi-field-wrapper').each(function () {

                var $wrapper = $('.multi-fields', this);

                $(".add-criteria", $(this)).click(function (e) {
                    i++;
                    var criteria = $('.multi-field:first-child', $wrapper).clone(true);
                    criteria.appendTo($wrapper).find('input').val('').focus();
                });


                $('.multi-field .remove-field', $wrapper).click(function () {
                    if ($('.multi-field', $wrapper).length > 1)
                        $(this).parent('.multi-field').remove();
                });
            });
            k = 0;
            $(function () {
                $('.multi-field-wrapper').each(function () {
                    var $judgeWrapper = $('.multi-fields', this);

                    $(".add-judge", $(this)).click(function (e) {
                        k++;
                        var judge = $('.multi-field:first-child', $judgeWrapper).clone(true);
                        judge.appendTo($judgeWrapper).find('input').val('').focus();
                    });


                    $('.multi-field .remove-field', $judgeWrapper).click(function () {
                        if ($('.multi-field', $judgeWrapper).length > 1)
                            $(this).parent('.multi-field').remove();
                        k--;
                    });
                });
            });


            $('#uploadExcel').click(function () {
                $('#excelPreview').show();
            });

            $("#ContestForm").submit(function (e) {
                e.preventDefault();
                var judgeListItems = $('.judge-list-item');
                $(judgeListItems).each(function (index, element) {
                    var children = $(element).children();
                    $(children[0]).attr('name', 'judges[' + index + '].firstname');
                    $(children[1]).attr('name', 'judges[' + index + '].lastname');
                    $(children[2]).attr('name', 'judges[' + index + '].email');
                })
                var criteriaListItems = $('.criteria-list-item');
                $(criteriaListItems).each(function (index, element) {
                    var children = $(element).children();
                    $(children[0]).attr('name', 'criteria[' + index + '].name');
                    $(children[1]).attr('name', 'criteria[' + index + '].description');
                });
                this.submit();
            });
        });



</script>
    }

<h2>EditContest</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EditContestVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ContestID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ContestID, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ContestName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContestName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContestName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group monkey">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <h3>Criteria</h3>
        </div>
        <div class="form-group">
            @foreach (var item in Model.Criteria)
            {
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Criteria)
                    @Html.EditorFor(x => item.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => item.Description)
                    @Html.EditorFor(x => item.Description, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            }
        </div>
        <div class="form-group">
            <h3>Judges</h3>
        </div>

        <div class="form-group multi-field-wrapper">
            @foreach (var item in Model.Judges)
            {
                <div class="col-md-10 multi-fields">
                    <div class="multi-field judge-list-item">
                        @Html.LabelFor(model => item.FirstName)
                        @Html.EditorFor(x => item.FirstName, new { htmlAttributes = new { @class = "form-control", @name = "judges[0].firstname"} })
                        @Html.LabelFor(model => item.LastName)
                        @Html.EditorFor(x => item.LastName, new { htmlAttributes = new { @class = "form-control", @name = "judges[0].lastname" } })
                        @Html.LabelFor(x => item.Email)
                        @Html.EditorFor(x => item.Email, new { htmlAttributes = new { @class = "form-control", @name = "judges[0].email" } })
                        <button type="button" class="remove-field">Remove</button>
                    </div>
                </div>
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
