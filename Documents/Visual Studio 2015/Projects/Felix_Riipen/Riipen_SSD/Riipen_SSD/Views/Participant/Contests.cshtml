@model IEnumerable<Riipen_SSD.ViewModels.ParticipantViewModels.ContestTeamVM>

@{
    ViewBag.Title = "Contests";
}

<style>

    tr:nth-child(2){
          color:blue;
        font-weight:bold;

    }
   table tr:nth-child(2) a {

        color:BLUE;
        font-weight:bold;
    }
</style>

<p>Contest: @ViewBag.contestName</p>

@using (Html.BeginForm("Contests", "Participant", FormMethod.Get))
{
    @Html.AntiForgeryToken()
  
    <input name="contestID" value="@ViewBag.contestId" hidden />
    <input type="text" name="searchATeam" value="@ViewBag.searchStringValue" placeholder="Search a team" style="border:1px solid #ddd;margin-top:10px">
    <button type="submit">Submit</button>
}



@if (ViewBag.searchStringValue == "")
{
    <h2>All teams</h2>
}
else
{
    <h2>Result for: @ViewBag.searchStringValue</h2>
    <p>@Html.ActionLink("Get all teams", "Contests", new { contestID = ViewBag.contestId })</p>
}


<div class="dropdown" style="margin-top:10px;margin-bottom:10px;float:right">
    Sort: <button class="btn btn-default btn-sm dropdown-toggle" type="button" id="sortMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
        @ViewBag.sortStringValue
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" aria-labelledby="sortMenu">
        <li>@Html.ActionLink("Status", "Contests", new { contestID = ViewBag.contestId, searchATeam = ViewBag.searchStringValue, sortTeams = "Status" })</li>
        <li>@Html.ActionLink("Name", "Contests", new { contestID = ViewBag.contestId, searchATeam = ViewBag.searchStringValue, sortTeams = "Name" })</li>
    </ul>
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TeamID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TeamName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Score)
        </th>
        <th>
         @Html.DisplayNameFor(model => model.JudgeNotSubmitted)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TeamID)
        </td>
        <td>
            @Html.ActionLink(item.TeamName, "TeamScores", new { teamID=item.TeamID,contestID = ViewBag.ContestID, yourTeamID = ViewBag.YourTeamID })
        </td>
        <td>
            @if (item.Score == null)
            {
                <span>Not available</span>
            }
            else
            {
                @Html.DisplayFor(modelItem => item.Score)
            }
           

        </td>
        <td>
            @if (item.JudgeNotSubmitted==0)
            {

                <span>Final</span>

            }
            else
            {

                <span>Waiting for @Html.DisplayFor(modelItem => item.JudgeNotSubmitted) Judges</span>
            }

            
        </td>
    </tr>
}

</table>
